// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestAirline.Booking.ReadModel.EntityFramework.DBContext;

namespace RestAirline.Booking.ReadModel.EntityFramework.Migrations
{
    [DbContext(typeof(RestAirlineReadModelContext))]
    partial class RestAirlineReadModelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RestAirline.Booking.ReadModel.EntityFramework.Booking.Flight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Aircraft");

                    b.Property<DateTime>("ArriveDate");

                    b.Property<string>("ArriveStation");

                    b.Property<DateTime>("DepartureDate");

                    b.Property<string>("DepartureStation");

                    b.Property<string>("FlightKey");

                    b.Property<Guid>("JourneyId");

                    b.Property<string>("Number");

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.HasIndex("JourneyId")
                        .IsUnique();

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("RestAirline.Booking.ReadModel.EntityFramework.Booking.Journey", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ArriveDate");

                    b.Property<string>("ArriveStation");

                    b.Property<string>("BookingReadModelId");

                    b.Property<string>("BookingReadModelId1");

                    b.Property<DateTime>("DepartureDate");

                    b.Property<string>("DepartureStation");

                    b.Property<string>("Description");

                    b.Property<string>("JourneyKey");

                    b.HasKey("Id");

                    b.HasIndex("BookingReadModelId");

                    b.HasIndex("BookingReadModelId1");

                    b.ToTable("Journeys");
                });

            modelBuilder.Entity("RestAirline.Booking.ReadModel.EntityFramework.Booking.Passenger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Age");

                    b.Property<string>("BookingReadModelId");

                    b.Property<string>("BookingReadModelId1");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("PassengerKey");

                    b.Property<int>("PassengerType");

                    b.Property<long>("Version")
                        .IsConcurrencyToken();

                    b.HasKey("Id");

                    b.HasIndex("BookingReadModelId");

                    b.HasIndex("BookingReadModelId1");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("RestAirline.Booking.ReadModel.EntityFramework.BookingReadModel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("Version")
                        .IsConcurrencyToken();

                    b.HasKey("Id");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("RestAirline.Booking.ReadModel.EntityFramework.Booking.Flight", b =>
                {
                    b.HasOne("RestAirline.Booking.ReadModel.EntityFramework.Booking.Journey", "Journey")
                        .WithOne("Flight")
                        .HasForeignKey("RestAirline.Booking.ReadModel.EntityFramework.Booking.Flight", "JourneyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RestAirline.Booking.ReadModel.EntityFramework.Booking.Journey", b =>
                {
                    b.HasOne("RestAirline.Booking.ReadModel.EntityFramework.BookingReadModel", "BookingReadModel")
                        .WithMany("Journeys")
                        .HasForeignKey("BookingReadModelId");

                    b.HasOne("RestAirline.Booking.ReadModel.EntityFramework.BookingReadModel")
                        .WithMany()
                        .HasForeignKey("BookingReadModelId1");
                });

            modelBuilder.Entity("RestAirline.Booking.ReadModel.EntityFramework.Booking.Passenger", b =>
                {
                    b.HasOne("RestAirline.Booking.ReadModel.EntityFramework.BookingReadModel", "BookingReadModel")
                        .WithMany("Passengers")
                        .HasForeignKey("BookingReadModelId");

                    b.HasOne("RestAirline.Booking.ReadModel.EntityFramework.BookingReadModel")
                        .WithMany()
                        .HasForeignKey("BookingReadModelId1");
                });
#pragma warning restore 612, 618
        }
    }
}
